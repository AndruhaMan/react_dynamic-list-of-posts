{"version":3,"sources":["components/PostInfo.tsx","components/PostsList.tsx","components/Loader/Loader.tsx","components/NewCommentForm.tsx","utils/fetchClient.ts","components/CommentInfo.tsx","components/CommentsList.tsx","components/PostDetails.tsx","api/comments.ts","components/UserSelector.tsx","App.tsx","api/users.ts","api/posts.ts","index.tsx"],"names":["PostInfo","_ref","post","selectedPost","setSelectedPost","isSelected","id","_jsxs","children","_jsx","title","className","type","cn","onClick","PostsList","posts","map","Loader","NewCommentForm","createComment","isLoading","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","body","setBody","_useState7","_useState8","isNameError","setIsNameError","_useState9","_useState10","isEmailError","setIsEmailError","_useState11","_useState12","isBodyError","setIsBodyError","onSubmit","event","preventDefault","trimedName","trim","trimedEmail","trimedBody","htmlFor","placeholder","value","onChange","target","request","url","delay","data","arguments","length","undefined","options","method","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","json","client","CommentInfo","comment","removeComment","href","concat","CommentsList","comments","_Fragment","PostDetails","setComments","isError","setIsError","setIsLoading","isFormOpen","setIsFormOpen","isFormLoading","setIsFormLoading","useEffect","postId","catch","finally","isLoadedSuccessfully","commentId","filter","deleteComment","preparedComment","postComment","postedComment","_toConsumableArray","UserSelector","users","selectedUser","setSelectedUser","isDropdownActive","setIsDropdownActive","dropdown","useRef","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","hasUserSelected","user","toggleDropdown","currentState","ref","role","handleUserSelect","App","setUsers","setPosts","userId","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.121e0a61.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  post: Post,\n  selectedPost: Post | null,\n  setSelectedPost: (post: Post | null) => void,\n};\n\nexport const PostInfo: React.FC<Props> = ({\n  post,\n  selectedPost,\n  setSelectedPost,\n}) => {\n  const isSelected = () => post.id === selectedPost?.id;\n  const handlePostSelect = () => {\n    if (isSelected()) {\n      setSelectedPost(null);\n\n      return;\n    }\n\n    setSelectedPost(post);\n  };\n\n  return (\n    <tr data-cy=\"Post\" key={post.id}>\n      <td data-cy=\"PostId\">{post.id}</td>\n\n      <td data-cy=\"PostTitle\">\n        {post.title}\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          type=\"button\"\n          data-cy=\"PostButton\"\n          className={cn(\n            'button',\n            'is-link',\n            { 'is-light': !isSelected() },\n          )}\n          onClick={handlePostSelect}\n        >\n          {isSelected()\n            ? 'Close'\n            : 'Open'}\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Post } from '../types/Post';\nimport { PostInfo } from './PostInfo';\n\ntype Props = {\n  posts: Post[]\n  selectedPost: Post | null,\n  setSelectedPost: (post: Post | null) => void,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectedPost,\n  setSelectedPost,\n}) => {\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts.map(post => (\n            <PostInfo\n              key={post.id}\n              post={post}\n              selectedPost={selectedPost}\n              setSelectedPost={setSelectedPost}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { CommentData } from '../types/Comment';\n\ntype Props = {\n  createComment: (comment: CommentData) => void,\n  isLoading: boolean,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  createComment,\n  isLoading,\n}) => {\n  const [name, setName] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [body, setBody] = useState<string>('');\n  const [isNameError, setIsNameError] = useState<boolean>(false);\n  const [isEmailError, setIsEmailError] = useState<boolean>(false);\n  const [isBodyError, setIsBodyError] = useState<boolean>(false);\n\n  const handleNameChanging = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n    setIsNameError(false);\n  };\n\n  const handleEmailChanging = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n    setIsEmailError(false);\n  };\n\n  const handleBodyChanging = (\n    event: React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    setBody(event.target.value);\n    setIsBodyError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimedName = name.trim();\n    const trimedEmail = email.trim();\n    const trimedBody = body.trim();\n\n    if (!trimedName) {\n      setIsNameError(true);\n    }\n\n    if (!trimedEmail) {\n      setIsEmailError(true);\n    }\n\n    if (!trimedBody) {\n      setIsBodyError(true);\n    }\n\n    if (trimedName && trimedEmail && trimedBody) {\n      setBody('');\n\n      createComment({\n        name: trimedName,\n        email: trimedEmail,\n        body: trimedBody,\n      });\n    }\n  };\n\n  const handleClear = () => {\n    setName('');\n    setIsNameError(false);\n    setEmail('');\n    setIsEmailError(false);\n    setBody('');\n    setIsBodyError(false);\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={cn(\n              'input',\n              { 'is-danger': isNameError },\n            )}\n            value={name}\n            onChange={handleNameChanging}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {isNameError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {isNameError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={cn(\n              'input',\n              { 'is-danger': isEmailError },\n            )}\n            value={email}\n            onChange={handleEmailChanging}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {isEmailError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {isEmailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={cn(\n              'input',\n              { 'is-danger': isBodyError },\n            )}\n            value={body}\n            onChange={handleBodyChanging}\n          />\n        </div>\n\n        {isBodyError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={cn(\n              'button',\n              'is-link',\n              { 'is-loading': isLoading },\n            )}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={handleClear}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: Record<string, unknown> | null = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: Record<string, unknown>) => (\n    request<T>(url, 'POST', data)\n  ),\n  patch: <T>(url: string, data: Record<string, unknown>) => (\n    request<T>(url, 'PATCH', data)\n  ),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { Comment } from '../types/Comment';\n\ntype Props = {\n  comment: Comment,\n  removeComment: (id: number) => void,\n};\n\nexport const CommentInfo: React.FC<Props> = ({\n  comment,\n  removeComment,\n}) => {\n  const {\n    id,\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <article\n      className=\"message is-small\"\n      data-cy=\"Comment\"\n      key={id}\n    >\n      <div className=\"message-header\">\n        <a href={`mailto:${email}`} data-cy=\"CommentAuthor\">\n          {name}\n        </a>\n        <button\n          data-cy=\"CommentDelete\"\n          type=\"button\"\n          className=\"delete is-small\"\n          aria-label=\"delete\"\n          onClick={() => removeComment(id)}\n        >\n          delete button\n        </button>\n      </div>\n\n      <div className=\"message-body\" data-cy=\"CommentBody\">\n        {body}\n      </div>\n    </article>\n  );\n};\n","import { Comment } from '../types/Comment';\nimport { CommentInfo } from './CommentInfo';\n\ntype Props = {\n  comments: Comment[],\n  removeComment: (id: number) => void,\n};\n\nexport const CommentsList: React.FC<Props> = ({\n  comments,\n  removeComment,\n}) => (\n  <>\n    {comments.map(comment => (\n      <CommentInfo\n        key={comment.id}\n        comment={comment}\n        removeComment={removeComment}\n      />\n    ))}\n  </>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { deleteComment, getComments, postComment } from '../api/comments';\nimport { Comment, CommentData } from '../types/Comment';\nimport { CommentsList } from './CommentsList';\n\ntype Props = {\n  post: Post,\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  post,\n}) => {\n  const {\n    id,\n    title,\n    body,\n  } = post;\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isFormOpen, setIsFormOpen] = useState<boolean>(false);\n  const [isFormLoading, setIsFormLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsFormOpen(false);\n    setIsError(false);\n\n    getComments(id)\n      .then(setComments)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  const createComment = (\n    comment: CommentData,\n  ) => {\n    const preparedComment = {\n      postId: post.id,\n      name: comment.name,\n      email: comment.email,\n      body: comment.body,\n    };\n\n    setIsFormLoading(true);\n    setIsError(false);\n\n    postComment(preparedComment)\n      .then((postedComment) => setComments([...comments, postedComment]))\n      .catch(() => setIsError(true))\n      .finally(() => setIsFormLoading(false));\n  };\n\n  const removeComment = (commentId: number) => {\n    setIsError(false);\n    setComments(comments.filter(comment => comment.id !== commentId));\n\n    deleteComment(commentId)\n      .catch(() => setIsError(true));\n  };\n\n  const isLoadedSuccessfully = !isLoading && !isError;\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${id}: ${title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && !isLoading && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              Something went wrong\n            </div>\n          )}\n\n          {isLoadedSuccessfully && comments.length === 0 && (\n            <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n              No comments yet\n            </p>\n          )}\n\n          {isLoadedSuccessfully && comments.length > 0 && (\n            <>\n              <p className=\"title is-4\">Comments:</p>\n\n              <CommentsList\n                comments={comments}\n                removeComment={removeComment}\n              />\n            </>\n          )}\n\n          {isLoadedSuccessfully && !isFormOpen && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => setIsFormOpen(true)}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {isFormOpen && (\n          <NewCommentForm\n            createComment={createComment}\n            isLoading={isFormLoading}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { Comment } from '../types/Comment';\nimport { client } from '../utils/fetchClient';\n\nexport function getComments(postId: number) {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n}\n\nexport function postComment(comment: Omit<Comment, 'id'>) {\n  return client.post<Comment>('/comments', comment);\n}\n\nexport function deleteComment(commentId: number) {\n  return client.delete(`/comments/${commentId}`);\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { User } from '../types/User';\n\ntype Props = {\n  users: User[],\n  selectedUser: User | null,\n  setSelectedUser: (user: User) => void,\n};\n\nexport const UserSelector: React.FC<Props> = ({\n  users,\n  selectedUser,\n  setSelectedUser,\n}) => {\n  const [isDropdownActive, setIsDropdownActive] = useState(false);\n  const dropdown = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleOutsideClick = (event: MouseEvent) => {\n      if (dropdown.current\n        && !(dropdown.current).contains(event.target as Node)) {\n        setIsDropdownActive(false);\n      }\n    };\n\n    document.addEventListener('click', handleOutsideClick);\n\n    return () => {\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, []);\n\n  const hasUserSelected = (user: User) => (\n    selectedUser && (selectedUser.id === user.id)\n  );\n\n  const toggleDropdown = () => {\n    setIsDropdownActive(currentState => !currentState);\n  };\n\n  const handleUserSelect = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    user: User,\n  ) => {\n    event.preventDefault();\n    toggleDropdown();\n\n    if (!hasUserSelected(user)) {\n      setSelectedUser(user);\n    }\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={cn(\n        'dropdown',\n        { 'is-active': isDropdownActive },\n      )}\n      ref={dropdown}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={toggleDropdown}\n        >\n          <span>\n            {selectedUser\n              ? selectedUser.name\n              : 'Choose a user'}\n          </span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {users.map(user => (\n            <a\n              key={user.id}\n              href={`#user-${user.id}`}\n              className={cn(\n                'dropdown-item',\n                { 'is-active': hasUserSelected(user) },\n              )}\n              onClick={(event) => handleUserSelect(event, user)}\n            >\n              {user.name}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport cn from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { getUsers } from './api/users';\nimport { getPosts } from './api/posts';\nimport { Post } from './types/Post';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    getUsers()\n      .then(setUsers)\n      .catch(() => setIsError(true));\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser) {\n      setIsLoading(true);\n      setSelectedPost(null);\n\n      getPosts(selectedUser.id)\n        .then(setPosts)\n        .catch(() => setIsError(true))\n        .finally(() => setIsLoading(false));\n    }\n  }, [selectedUser]);\n\n  const isLoadedSuccessfully = selectedUser\n    && !isLoading\n    && !isError;\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  selectedUser={selectedUser}\n                  setSelectedUser={setSelectedUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!selectedUser && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {selectedUser && isLoading && (\n                  <Loader />\n                )}\n\n                {!isLoading && isError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {isLoadedSuccessfully\n                  && posts.length === 0\n                  && (\n                    <div\n                      className=\"notification is-warning\"\n                      data-cy=\"NoPostsYet\"\n                    >\n                      No posts yet\n                    </div>\n                  )}\n\n                {isLoadedSuccessfully\n                  && posts.length > 0\n                  && (\n                    <PostsList\n                      posts={posts}\n                      selectedPost={selectedPost}\n                      setSelectedPost={setSelectedPost}\n                    />\n                  )}\n\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={cn(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': selectedPost },\n            )}\n          >\n            {selectedPost && (\n              <div className=\"tile is-child box is-success \">\n                <PostDetails\n                  post={selectedPost}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport function getUsers() {\n  return client.get<User[]>('/users');\n}\n","import { Post } from '../types/Post';\nimport { client } from '../utils/fetchClient';\n\nexport function getPosts(userId: number) {\n  return client.get<Post[]>(`/posts?userId=${userId}`);\n}\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}